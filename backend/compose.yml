services:
    postgres:
        env_file:
            -   .env
        container_name: postgres
        image: postgres:alpine
        hostname: postgres
        ports:
            - "5050:5432"
        healthcheck:
            test: pg_isready -U postgres
            interval: 10s
            timeout: 5s
            retries: 5

    images-nginx:
        container_name: images-nginx
        image: images-nginx:prod
        hostname: images-nginx
        build:
            context: images-nginx
            dockerfile: Dockerfile
        ports:
            - "4000:4000"
        healthcheck:
            test: [ "CMD", "curl", "--fail", "http://localhost:4000" ]
            interval: 1s
            retries: 120
            start_period: 15s
            timeout: 5s
        volumes:
            - "images:/etc/nginx/html/images"

    catering-backend:
        env_file:
            -   .env
        container_name: catering-backend
        hostname: catering-backend
        image: catering-backend:prod
        build:
            context: .
            dockerfile: Dockerfile
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            -   "images:/etc/nginx/html/images"
        ports:
            - "8080:8080"

volumes:
    images:
